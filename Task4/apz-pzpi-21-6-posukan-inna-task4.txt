1 МЕТА РОБОТИ

Мета проекту полягає в розробці клієнтської частини системи, яка забезпечить ефективну роботу користувачів у веб-режимі, а також надасть можливості для адміністрування системи. Досягнення цієї мети супроводжується створенням звіту, який включає в себе діаграми, такі як: UML діаграма компонентів, UML діаграма прецедентів, UML діаграма станів та UML діаграма діяльності.

2 КОНЦЕПТУАЛЬНЕ МОДЕЛЮВАННЯ ПРЕДМЕТНОЇ ОБЛАСТІ

2.1 Діаграма прецедентів

У програмній системі "Inventory" передбачено три типи користувачів: адміністратор, власник магазину та касир. Кожен з цих типів має свої власні функціональні можливості, які представлені у діаграмі прецедентів (див. рис. А.1).

2.2 Діаграма станів

На зображенні (див. рис. А.2) представлена діаграма станів, що описує процес реєстрації та авторизації користувачів на веб-сайті, а також їхні дії після успішного входу. 
Спочатку користувач перебуває у стані "Незареєстрований", оскільки ще не зареєструвався на сайті. Якщо він вирішує створити аккаунт, натискає кнопку "Зареєструватися", що переводить його до стану "Реєстрація". 
На цьому етапі користувач заповнює реєстраційну форму. Якщо введені дані є недійсними, він залишається у стані "Реєстрація" та отримує повідомлення про помилку. У разі, якщо дані вірні, користувач переходить до стану "Головна сторінка". 
Перебуваючи на головній сторінці, користувач має кілька можливостей. Він може переглядати підписки, натиснувши кнопку "Підписки", що переводить його на відповідну сторінку. Якщо його цікавить перегляд магазинів, він натискає кнопку "Магазин". 
Для перегляду інформації про співробітників є кнопка "Співробітники". Якщо ж користувача цікавлять замовлення, які створені для постачальників, він натискає кнопку "Замовлення" і переходить на відповідну сторінку. 
На сторінці "Замовлення" після прийому товару , користувач може змінити статус замовлення, натиснувши кнопку "Змінити статус". 
Таким чином, діаграма станів відображає всі можливі дії користувача на різних етапах взаємодії з веб-сайтом, починаючи з реєстрації та закінчуючи управлінням замовленнями.

2.3 Діаграма активності

Для більш детального розуміння процесу керування запасами та замовленнями для мережі магазинів була створена діаграма активності (див. рис. А.3)
Після успішного входу в систему користувач може створювати магазини, додавати продукти до них, переглядати аналітику та здійснювати продажі.
Також доступні можливості найму нових працівників та зміна статусу замовлень. У випадку нестачі товару система автоматично формує заявку до постачальників.
 
3 ІНЖЕНЕРНІ РІШЕННЯ

3.1 Діаграма компонентів

Клієнтська частина програми розроблена на мові програмування JavaScript з використанням фреймворку React JS. Архітектура React ґрунтується на компонентній основі, де веб-інтерфейс розбивається на незалежні компоненти.
Цей підхід сприяє високій перевикористовуваності елементів, оскільки кожен компонент може бути розгляданий як самостійна частина, що спрощує розробку та підтримку. 
Для взаємодії з сервером була створена відповідна папка, де формуються всі HTTP-запити. Ці запити взаємодіють із сторінками JSX проєкта, надаючи можливість динамічно отримувати та відображати дані з сервера. 
Для більш детальної взаємодії React модулів була створена діаграма компонентів (див.рис.А.4)

4 ВИСНОВКИ

У процесі виконання лабораторної роботи було проведено аналіз вимог до системи та розроблено клієнтську частину програмного застосунку на React JS. 
Також, спроектовано зазначені вище UML діаграми, які сприяють кращому розумінню структури та функціоналу системи. 
Розроблені діаграми дозволяють візуалізувати різні аспекти системи, такі як взаємодія компонентів, поведінка системи, прецеденти взаємодії користувачів та можливі стани системи.

5 ПЕРЕЛІК ДЖЕРЕЛ ПОСИЛАННЯ

Посилання на архів з кодом: https://github.com/NurePosukanInna/apz-pzpi-21-6-posukan-inna/tree/main/Task4
Посилання на відео: 
